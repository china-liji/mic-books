{"version":3,"sources":["webpack:///./src/components/code-previewer/file.ts","webpack:///./demos/mic/mic-inspector/readme/readme.md","webpack:///./demos/mic/mic-inspector/readme/usage-demo/use-styles.js","webpack:///./demos/mic/mic-inspector/readme/usage-demo/index.jsx?c7f9","webpack:///./demos/mic/mic-inspector/readme/index.ts","webpack:///./demos/mic/mic-inspector/readme/usage-demo/use-styles.js?a010","webpack:///./demos/mic/mic-inspector/readme/usage-demo/index.jsx"],"names":["name","source","type","this","result","exec","useStyles","marginBottom","M1","fontWeight","fontSize","M2","content","usageDemo","obj","a","b","Error","className","value","document","defaultExpand","dom","owner","isNonenumerable","dimmed","Object","getOwnPropertyDescriptor","get","preview","repeat","before","after","undefined","location","reload"],"mappings":"2FAAA,wCAOE,SAAYA,EAAcC,EAAgBC,GAIxC,GAHAC,KAAKH,KAAOA,EACZG,KAAKF,OAASA,GAETC,EAAM,CACT,IAAME,EAAS,gCAAgCC,KAAKF,KAAKH,MAEzDE,EAAOE,EAASA,EAAO,GAAK,GAG9BD,KAAKD,KAAOA,I,kFCjBD,I,yCCEFI,EAAY,uBACvB,aACA,CACE,SAAU,CACRC,aAAc,KAAGC,GACjB,SAAU,CACRC,WAAY,OACZC,SAAU,KAAGC,GACb,YAAa,CACXC,QAAS,OAEX,WAAY,CACVA,QAAS,a,SCdJ,ICOFC,EAAY,IAAI,IAC3B,CACE,IAAI,IAAK,YDTE,6yHCUX,IAAI,IAAK,gBCVE,yYCIR,WACL,IAAMC,EAAM,CACVC,EAAG,EACHC,EAAG,EACH,WACE,GAAIb,OAASW,EACX,OAAOA,EAGT,MAAM,IAAIG,MAAM,sBAIpB,OACE,yBAAKC,UAAWZ,KACd,4BACE,yCACA,4BACE,kBAAC,YAAS,CAACN,KAAK,WAAWmB,MAAOC,WAClC,kBAAC,YAAS,CAACpB,KAAK,SAASmB,MAAOL,EAAKO,eAAa,MAGtD,4BACE,4CACA,4BACE,kBAAC,eAAY,CAACC,IAAKF,aAGvB,4BACE,0CACA,4BACE,kBAAC,aAAU,CAACG,MAAOT,MAGvB,4BACE,wCACA,4BACE,kBAAC,WAAQ,CAACd,KAAK,SAASmB,MAAOL,EAAKO,eAAa,EAACG,iBAAiB,MAGvE,4BACE,4CACA,4BACE,kBAAC,eAAY,CAACxB,KAAK,eACnB,6BACA,kBAAC,eAAY,CAACA,KAAK,gBAAgByB,QAAM,MAG7C,4BACE,6CACA,4BACE,kBAAC,gBAAa,yDAGlB,4BACE,2CACA,4BACE,4BACE,6EACA,4BACE,kBAAC,cAAW,CAACN,MAAOO,OAAOC,yBAAyBb,EAAK,QAAQc,IAAKL,MAAOT,MAGjF,4BACE,iFACA,4BACE,kBAAC,cAAW,CAACK,MAAOO,OAAOC,yBAAyBb,EAAK,QAAQc,IAAKL,MAAO,WAKrF,4BACE,2CACA,4B,iFAEE,6BACA,kBAAC,cAAW,CAACJ,MAAO,QAGxB,4BACE,2CACA,4BACE,4BACE,oDACA,4BACE,kBAAC,cAAW,CAACA,MAAOL,MAGxB,4BACE,qDACA,4BACE,kBAAC,cAAW,CAACK,MAAOL,EAAKe,SAAO,MAGpC,4BACE,mDACA,4BACE,kBAAC,cAAW,CAACV,MAAO,CAAC,EAAG,EAAG,OAG/B,4BACE,oDACA,4BACE,kBAAC,cAAW,CAACA,MAAO,CAAC,EAAG,EAAG,GAAIU,SAAO,QAK9C,4BACE,2CACA,4BACE,kBAAC,cAAW,CAACV,MAAO,MAAMW,OAAO,MACjC,6BACA,kBAAC,cAAW,CAACX,MAAO,MAAMW,OAAO,IAAKC,OAAQ,IAAMC,MAAO,MAC3D,6BACA,kBAAC,cAAW,CAACb,MAAO,MAAMW,OAAO,IAAKC,OAAO,IAAIC,MAAM,QAG3D,4BACE,4CACA,4BACE,kBAAC,eAAY,CAACb,MAAOL,IACrB,6BACA,kBAAC,eAAY,CAACK,MAAM,QACpB,6BACA,kBAAC,eAAY,CAACA,MAAO,MACrB,6BACA,kBAAC,eAAY,CAACA,WAAOc,IACrB,6BACA,kBAAC,eAAY,CAACd,OAAO,IACrB,6BACA,kBAAC,eAAY,CAACA,OAAO,IACrB,6BACA,kBAAC,eAAY,CAACA,MAAOe,SAASC,eF5HtC,GACA,GAGa,UHjBA","file":"js/13.boundle.js","sourcesContent":["export class File {\n  name: string;\n\n  source: string;\n\n  type: string;\n  \n  constructor(name: string, source: string, type?: string) {\n    this.name = name;\n    this.source = source;\n\n    if (!type) {\n      const result = /\\.([^/\\\\.]+?)(?=(?:[?#].*)?$)/.exec(this.name);\n\n      type = result ? result[1] : '';\n    }\n\n    this.type = type;\n  }\n}","export default \"# `Mic-Inspector`\\nA `react` inspector which a most similar of `Chorme DevTools` inspector.\\n\\n### Installation\\n```bash\\n# Yarn\\nyarn add mic-inspector\\n\\n# NPM\\nnpm install mic-inspector\\n```\\n\\n### Usage & Demo\\n```demo\\nimport(usageDemo)\\n```\\n\\n### Components\\n* [<Inspector />](./inspector)\\n* [<DomInspector />](./dom-inspector)\\n* [<Properties />](./properties)\\n* [<Property />](./property)\\n* [<PropertyName />](./property-name)\\n* [<PropertyValue />](./property-value)\\n* [<GetterValue />](./getter-value)\\n* [<NumberValue />](./number-value)\\n* [<ObjectValue />](./object-value)\\n* [<StringValue />](./string-value)\\n* [<UnknownValue />](./unknown-value)\\n\\n### Urls\\n* Repository: [https://github.com/china-liji/mic-inspector](https://github.com/china-liji/mic-inspector)\\n* Bugs: [https://github.com/china-liji/mic-inspector/issues](https://github.com/china-liji/mic-inspector/issues)\";","import { createStyles, EM } from 'mic-global';\n\nexport const useStyles = createStyles(\n  'usage-demo',\n  {\n    '& > dl': {\n      marginBottom: EM.M1,\n      '& > dt': {\n        fontWeight: 'bold',\n        fontSize: EM.M2,\n        '&::before': {\n          content: '\"<\"',\n        },\n        '&::after': {\n          content: '\" />\"',\n        },\n      },\n    },\n  }\n);","export default \"import React from 'react';\\nimport { useStyles } from './use-styles';\\nimport { DomInspector, Inspector, Properties, Property, PropertyName, PropertyValue, GetterValue, NumberValue, ObjectValue, StringValue, UnknownValue } from 'mic-inspector';\\n\\nexport function UsageDemo() {\\n  const obj = {\\n    a: 1,\\n    b: 2,\\n    get self() {\\n      if (this === obj) {\\n        return obj;\\n      }\\n\\n      throw new Error('here is an error');\\n    }\\n  };\\n\\n  return (\\n    <div className={useStyles()}>\\n      <dl>\\n        <dt>Inspector</dt>\\n        <dd>\\n          <Inspector name='document' value={document} />\\n          <Inspector name='object' value={obj} defaultExpand />\\n        </dd>\\n      </dl>\\n      <dl>\\n        <dt>DomInspector</dt>\\n        <dd>\\n          <DomInspector dom={document} />\\n        </dd>\\n      </dl>\\n      <dl>\\n        <dt>Properties</dt>\\n        <dd>\\n          <Properties owner={obj} />\\n        </dd>\\n      </dl>\\n      <dl>\\n        <dt>Property</dt>\\n        <dd>\\n          <Property name='object' value={obj} defaultExpand isNonenumerable={false} />\\n        </dd>\\n      </dl>\\n      <dl>\\n        <dt>PropertyName</dt>\\n        <dd>\\n          <PropertyName name='enumerable' />\\n          <br />\\n          <PropertyName name='nonenumerable' dimmed />\\n        </dd>\\n      </dl>\\n      <dl>\\n        <dt>PropertyValue</dt>\\n        <dd>\\n          <PropertyValue>This is a super component of other type values</PropertyValue>\\n        </dd>\\n      </dl>\\n      <dl>\\n        <dt>GetterValue</dt>\\n        <dd>\\n          <dl>\\n            <dt>GetterStatus.Protected -&gt; GetterStatus.Opened</dt>\\n            <dd>\\n              <GetterValue value={Object.getOwnPropertyDescriptor(obj, 'self').get} owner={obj} />\\n            </dd>\\n          </dl>\\n          <dl>\\n            <dt>GetterStatus.Protected -&gt; GetterStatus.Unexpected</dt>\\n            <dd>\\n              <GetterValue value={Object.getOwnPropertyDescriptor(obj, 'self').get} owner={null} />\\n            </dd>\\n          </dl>\\n        </dd>\\n      </dl>\\n      <dl>\\n        <dt>NumberValue</dt>\\n        <dd>\\n          You can press the alt/cmd key and click the number to change the number radix.\\n          <br />\\n          <NumberValue value={255} />\\n        </dd>\\n      </dl>\\n      <dl>\\n        <dt>ObjectValue</dt>\\n        <dd>\\n          <dl>\\n            <dt>object - normal mode</dt>\\n            <dd>\\n              <ObjectValue value={obj} />\\n            </dd>\\n          </dl>\\n          <dl>\\n            <dt>object - preview mode</dt>\\n            <dd>\\n              <ObjectValue value={obj} preview />\\n            </dd>\\n          </dl>\\n          <dl>\\n            <dt>array - normal mode</dt>\\n            <dd>\\n              <ObjectValue value={[1, 2, 3]} />\\n            </dd>\\n          </dl>\\n          <dl>\\n            <dt>array - preview mode</dt>\\n            <dd>\\n              <ObjectValue value={[1, 2, 3]} preview />\\n            </dd>\\n          </dl>\\n        </dd>\\n      </dl>\\n      <dl>\\n        <dt>StringValue</dt>\\n        <dd>\\n          <StringValue value={'123'.repeat(10)} />\\n          <br />\\n          <StringValue value={'123'.repeat(10)} before={'\\\\''} after={'\\\\''} />\\n          <br />\\n          <StringValue value={'123'.repeat(10)} before='`' after='`' />\\n        </dd>\\n      </dl>\\n      <dl>\\n        <dt>UnknownValue</dt>\\n        <dd>\\n          <UnknownValue value={obj} />\\n          <br />\\n          <UnknownValue value='abc' />\\n          <br />\\n          <UnknownValue value={123} />\\n          <br />\\n          <UnknownValue value={undefined} />\\n          <br />\\n          <UnknownValue value={true} />\\n          <br />\\n          <UnknownValue value={false} />\\n          <br />\\n          <UnknownValue value={location.reload} />\\n        </dd>\\n      </dl>\\n    </div>\\n  );\\n}\";","import markdown from './readme.md';\nimport { Demo } from '@/src/components/code-previewer/demo';\nimport { File } from '@/src/components/code-previewer/file';\nimport { UsageDemo } from './usage-demo';\nimport usageDemoSource from './usage-demo?txt';\nimport usageDemoUseStylesSource from './usage-demo/use-styles?txt';\n\nexport const usageDemo = new Demo(\n  [\n    new File('index.jsx', usageDemoSource),\n    new File('use-styles.js', usageDemoUseStylesSource),\n  ],\n  UsageDemo,\n  false,\n  true\n);\n\nexport default markdown;","export default \"import { createStyles, EM } from 'mic-global';\\n\\nexport const useStyles = createStyles(\\n  'usage-demo',\\n  {\\n    '& > dl': {\\n      marginBottom: EM.M1,\\n      '& > dt': {\\n        fontWeight: 'bold',\\n        fontSize: EM.M2,\\n        '&::before': {\\n          content: '\\\"<\\\"',\\n        },\\n        '&::after': {\\n          content: '\\\" />\\\"',\\n        },\\n      },\\n    },\\n  }\\n);\";","import React from 'react';\nimport { useStyles } from './use-styles';\nimport { DomInspector, Inspector, Properties, Property, PropertyName, PropertyValue, GetterValue, NumberValue, ObjectValue, StringValue, UnknownValue } from 'mic-inspector';\n\nexport function UsageDemo() {\n  const obj = {\n    a: 1,\n    b: 2,\n    get self() {\n      if (this === obj) {\n        return obj;\n      }\n\n      throw new Error('here is an error');\n    }\n  };\n\n  return (\n    <div className={useStyles()}>\n      <dl>\n        <dt>Inspector</dt>\n        <dd>\n          <Inspector name='document' value={document} />\n          <Inspector name='object' value={obj} defaultExpand />\n        </dd>\n      </dl>\n      <dl>\n        <dt>DomInspector</dt>\n        <dd>\n          <DomInspector dom={document} />\n        </dd>\n      </dl>\n      <dl>\n        <dt>Properties</dt>\n        <dd>\n          <Properties owner={obj} />\n        </dd>\n      </dl>\n      <dl>\n        <dt>Property</dt>\n        <dd>\n          <Property name='object' value={obj} defaultExpand isNonenumerable={false} />\n        </dd>\n      </dl>\n      <dl>\n        <dt>PropertyName</dt>\n        <dd>\n          <PropertyName name='enumerable' />\n          <br />\n          <PropertyName name='nonenumerable' dimmed />\n        </dd>\n      </dl>\n      <dl>\n        <dt>PropertyValue</dt>\n        <dd>\n          <PropertyValue>This is a super component of other type values</PropertyValue>\n        </dd>\n      </dl>\n      <dl>\n        <dt>GetterValue</dt>\n        <dd>\n          <dl>\n            <dt>GetterStatus.Protected -&gt; GetterStatus.Opened</dt>\n            <dd>\n              <GetterValue value={Object.getOwnPropertyDescriptor(obj, 'self').get} owner={obj} />\n            </dd>\n          </dl>\n          <dl>\n            <dt>GetterStatus.Protected -&gt; GetterStatus.Unexpected</dt>\n            <dd>\n              <GetterValue value={Object.getOwnPropertyDescriptor(obj, 'self').get} owner={null} />\n            </dd>\n          </dl>\n        </dd>\n      </dl>\n      <dl>\n        <dt>NumberValue</dt>\n        <dd>\n          You can press the alt/cmd key and click the number to change the number radix.\n          <br />\n          <NumberValue value={255} />\n        </dd>\n      </dl>\n      <dl>\n        <dt>ObjectValue</dt>\n        <dd>\n          <dl>\n            <dt>object - normal mode</dt>\n            <dd>\n              <ObjectValue value={obj} />\n            </dd>\n          </dl>\n          <dl>\n            <dt>object - preview mode</dt>\n            <dd>\n              <ObjectValue value={obj} preview />\n            </dd>\n          </dl>\n          <dl>\n            <dt>array - normal mode</dt>\n            <dd>\n              <ObjectValue value={[1, 2, 3]} />\n            </dd>\n          </dl>\n          <dl>\n            <dt>array - preview mode</dt>\n            <dd>\n              <ObjectValue value={[1, 2, 3]} preview />\n            </dd>\n          </dl>\n        </dd>\n      </dl>\n      <dl>\n        <dt>StringValue</dt>\n        <dd>\n          <StringValue value={'123'.repeat(10)} />\n          <br />\n          <StringValue value={'123'.repeat(10)} before={'\\''} after={'\\''} />\n          <br />\n          <StringValue value={'123'.repeat(10)} before='`' after='`' />\n        </dd>\n      </dl>\n      <dl>\n        <dt>UnknownValue</dt>\n        <dd>\n          <UnknownValue value={obj} />\n          <br />\n          <UnknownValue value='abc' />\n          <br />\n          <UnknownValue value={123} />\n          <br />\n          <UnknownValue value={undefined} />\n          <br />\n          <UnknownValue value={true} />\n          <br />\n          <UnknownValue value={false} />\n          <br />\n          <UnknownValue value={location.reload} />\n        </dd>\n      </dl>\n    </div>\n  );\n}"],"sourceRoot":""}