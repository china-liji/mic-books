{"version":3,"sources":["webpack:///./src/components/code-previewer/file.ts","webpack:///./demos/mic/mic-inspector/number-value/readme.md","webpack:///./demos/mic/mic-inspector/number-value/usage-demo/index.jsx?d562","webpack:///./demos/mic/mic-inspector/number-value/index.ts","webpack:///./demos/mic/mic-inspector/number-value/usage-demo/index.jsx"],"names":["name","source","type","this","result","exec","usageDemo","value","radix","Binary","Octal","Decimal","Hex","radixProps","defaultExpand"],"mappings":"0FAAA,wCAOE,SAAYA,EAAcC,EAAgBC,GAIxC,GAHAC,KAAKH,KAAOA,EACZG,KAAKF,OAASA,GAETC,EAAM,CACT,IAAME,EAAS,gCAAgCC,KAAKF,KAAKH,MAEzDE,EAAOE,EAASA,EAAO,GAAK,GAG9BD,KAAKD,KAAOA,I,6HCjBD,I,2CCAA,ICOFI,EAAY,IAAI,IAC3B,CACE,IAAI,IAAK,YDTE,8lCEGR,WAGL,OACE,6BACE,4BACE,sCACA,4BACE,kBAAC,cAAW,CAACC,MAPN,OAUX,4BACE,oDACA,4BACE,kBAAC,cAAW,CAACA,MAbN,GAaqBC,MAAO,QAAMC,WAG7C,4BACE,mDACA,4BACE,kBAAC,cAAW,CAACF,MAnBN,GAmBqBC,MAAO,QAAME,UAG7C,4BACE,qDACA,4BACE,kBAAC,cAAW,CAACH,MAzBN,GAyBqBC,MAAO,QAAMG,YAG7C,4BACE,iDACA,4BACE,kBAAC,cAAW,CAACJ,MA/BN,GA+BqBC,MAAO,QAAMI,QAG7C,4BACE,8GACA,4BACE,kBAAC,cAAW,CAACL,MArCN,WDQf,GACA,GAGWM,EAA6B,CACxCb,KAAM,QACNO,MAAO,QACPO,eAAe,GAGF,UFtBA","file":"js/7.boundle.js","sourcesContent":["export class File {\n  name: string;\n\n  source: string;\n\n  type: string;\n  \n  constructor(name: string, source: string, type?: string) {\n    this.name = name;\n    this.source = source;\n\n    if (!type) {\n      const result = /\\.([^/\\\\.]+?)(?=(?:[?#].*)?$)/.exec(this.name);\n\n      type = result ? result[1] : '';\n    }\n\n    this.type = type;\n  }\n}","export default \"### Description\\nObject number value inspector.\\n\\n### Usage\\n```jsx\\nimport { NumberValue, Radix } from 'mic-inspector';\\n\\n<NumberValue value={15} />;\\n<NumberValue value={15} radix={Radix.Hex} />;\\n```\\n\\n### Demo\\n```demo\\nimport(usageDemo);\\n```\\n\\n### Props\\n* **value** · *required* - The number value.\\n* **radix** · *optional* - A specific number radix, default is Radix.Decimal.\\n* **...props** · *extends* - PropertyValueProps\\n\\n### Radix\\n* Import from `mic-inspector`\\n```js\\nimport { Radix } from 'mic-inspector';\\n```\\n\\n* Inspect this object.\\n```inspector\\ninspect(radixProps);\\n```\";","export default \"import React from 'react';\\nimport { NumberValue, Radix } from 'mic-inspector';\\n\\nexport function UsageDemo() {\\n  const number = 15;\\n\\n  return (\\n    <div>\\n      <dl>\\n        <dt>normal</dt>\\n        <dd>\\n          <NumberValue value={number} />\\n        </dd>\\n      </dl>\\n      <dl>\\n        <dt>radix = Radix.Binary</dt>\\n        <dd>\\n          <NumberValue value={number} radix={Radix.Binary} />\\n        </dd>\\n      </dl>\\n      <dl>\\n        <dt>radix = Radix.Octal</dt>\\n        <dd>\\n          <NumberValue value={number} radix={Radix.Octal} />\\n        </dd>\\n      </dl>\\n      <dl>\\n        <dt>radix = Radix.Decimal</dt>\\n        <dd>\\n          <NumberValue value={number} radix={Radix.Decimal} />\\n        </dd>\\n      </dl>\\n      <dl>\\n        <dt>radix = Radix.Hex</dt>\\n        <dd>\\n          <NumberValue value={number} radix={Radix.Hex} />\\n        </dd>\\n      </dl>\\n      <dl>\\n        <dt>You can press the alt/cmd key and click the number to change the number radix.</dt>\\n        <dd>\\n          <NumberValue value={number} />\\n        </dd>\\n      </dl>\\n    </div>\\n  );\\n}\";","import markdown from './readme.md';\nimport { Demo } from '@/src/components/code-previewer/demo';\nimport { File } from '@/src/components/code-previewer/file';\nimport { UsageDemo } from './usage-demo';\nimport usageDemoSource from './usage-demo?txt';\nimport { InspectorProps, Radix } from 'mic-inspector';\n\nexport const usageDemo = new Demo(\n  [\n    new File('index.jsx', usageDemoSource),\n  ],\n  UsageDemo,\n  false,\n  true\n);\n\nexport const radixProps: InspectorProps = {\n  name: 'Radix',\n  value: Radix,\n  defaultExpand: true,\n};\n\nexport default markdown;","import React from 'react';\nimport { NumberValue, Radix } from 'mic-inspector';\n\nexport function UsageDemo() {\n  const number = 15;\n\n  return (\n    <div>\n      <dl>\n        <dt>normal</dt>\n        <dd>\n          <NumberValue value={number} />\n        </dd>\n      </dl>\n      <dl>\n        <dt>radix = Radix.Binary</dt>\n        <dd>\n          <NumberValue value={number} radix={Radix.Binary} />\n        </dd>\n      </dl>\n      <dl>\n        <dt>radix = Radix.Octal</dt>\n        <dd>\n          <NumberValue value={number} radix={Radix.Octal} />\n        </dd>\n      </dl>\n      <dl>\n        <dt>radix = Radix.Decimal</dt>\n        <dd>\n          <NumberValue value={number} radix={Radix.Decimal} />\n        </dd>\n      </dl>\n      <dl>\n        <dt>radix = Radix.Hex</dt>\n        <dd>\n          <NumberValue value={number} radix={Radix.Hex} />\n        </dd>\n      </dl>\n      <dl>\n        <dt>You can press the alt/cmd key and click the number to change the number radix.</dt>\n        <dd>\n          <NumberValue value={number} />\n        </dd>\n      </dl>\n    </div>\n  );\n}"],"sourceRoot":""}