(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{177:function(n,e,t){"use strict";t.d(e,"a",(function(){return r})),t.d(e,"b",(function(){return a}));var o=t(0),l=t.n(o),m=t(173),r=function(n,e,t){void 0===e&&(e=!1);for(var o=[],l=0,m=Object.getOwnPropertyNames(window).sort();l<m.length;l++){var r=m[l],a=window[r],c=(a||{}).prototype;switch(!0){case"function"!=typeof a:case!c:case!(c instanceof n):continue}(Object.getPrototypeOf(c)===n.prototype?!e:e)&&(o.push(c),t&&t(r,c))}return o},a=function(n,e){void 0===e&&(e=!1);var t=[];return r(n,e,(function(n,e){t.push(l.a.createElement(m.Inspector,{key:n,name:n,value:e}))})),t}},403:function(n,e,t){"use strict";t.r(e),t.d(e,"watcherDemo",(function(){return c})),t.d(e,"descendantsDemo",(function(){return i})),t.d(e,"subsDemo",(function(){return H}));var o=t(74),l=t(0),m=t.n(l),r=t(177);var a=t(173);var c=new o.a([],(function(){return m.a.createElement("div",null,m.a.createElement(a.Inspector,{name:"HTMLElement",value:HTMLElement.prototype}),m.a.createElement(a.Inspector,{name:"ownPropertyNames",value:Object.getOwnPropertyNames(HTMLElement.prototype).sort()}))})),i=new o.a([],(function(){return m.a.createElement("div",null,Object(r.b)(HTMLElement,!0))}),!1,!0),H=new o.a([],(function(){return m.a.createElement("div",null,m.a.createElement(a.Inspector,{name:"list",value:Object(r.a)(HTMLElement)}))}),!1,!0);e.default="### 描述\n`HTMLElement` - `HTML` 元素节点，它是 `HTML` 文档的重要组成部分。`HTML` 元素节点为显示而生，主要属性、能力都是关于着**交互**这一方面。\n\n如果把 `HTMLElement` 比喻成一个独立的国度，那么 `Element` 负责的就是**内政**大权，而 `HTMLElement` 负责的则是**外交**政策。\n\n### Extends\n[Element](#/dom-nodes/element)\n\n### 观察\n```inline-demo\nimport(watcherDemo);\n```\n\n### HTML 元素节点的能力 No.1\n与文档，`HTML` 元素节点拥有 `与其他元素交互` 的能力，如：\n* `HTMLElement.offsetWidth`\n* `HTMLElement.offsetHeight`\n* `HTMLElement.offsetLeft`\n* `HTMLElement.offsetTop`\n* `HTMLElement.offsetParent`\n\n### HTML 元素节点的能力 No.2\n与用户，`HTML` 元素节点拥有 `行为交互` 的能力，如：\n* `HTMLElement.autofocus`\n* `HTMLElement.blur`\n* `HTMLElement.click`\n* `HTMLElement.draggable`\n* `HTMLElement.focus`\n* `HTMLElement.isContentEditable`\n* `HTMLElement.spellcheck`\n* `HTMLElement.tabIndex`\n* `HTMLElement.title`\n* ...\n\n### HTML 元素节点的能力 No.3\n与用户，`HTML` 元素节点拥有 `视觉交互` 的能力，如：\n* `HTMLElement.dir`\n* `HTMLElement.hidden`\n* `HTMLElement.style`\n* ...\n\n### HTML 元素节点的能力 No.4\n与用户，`HTML` 元素节点拥有 `事件交互` 的能力，如：\n* `HTMLElement.onclick`\n* `HTMLElement.ondblclick`\n* `HTMLElement.onfocus`\n* `HTMLElement.onblur`\n* `HTMLElement.ondrag`\n* ...\n\n### 基础节点类型\n分类标识 - **直接性继承**，即在原型链的继承关系上，它是否“**直接**”继承于 `HTMLElement`。\n```inline-demo\nimport(subsDemo);\n```\n\n这里有一个特殊的节点 - `HTMLUnknownElement`：所有已知、大众的 `HTML` 元素都有特殊的类（对象）所对应，而其他未知、自定义的 `HTML` 元素都将归类于 `HTMLUnknownElement`。\n\n### 其他节点类型\n分类标识 - **间接性继承**，即在原型链的继承关系上，它是否“**间接**”继承于 `HTMLElement`。\n```inline-demo\nimport(descendantsDemo);\n```\n\n### 更多内容\n* [Element](#/dom-nodes/element)"}}]);