{"version":3,"sources":["webpack:///./src/components/code-previewer/file.ts","webpack:///./demos/mic/mic-inspector/property/readme.md","webpack:///./demos/mic/mic-inspector/property/usage-demo/index.jsx?16c2","webpack:///./demos/mic/mic-inspector/property/index.ts","webpack:///./demos/mic/mic-inspector/property/usage-demo/index.jsx"],"names":["name","source","type","this","result","exec","usageDemo","descriptor","window","location","value","defaultExpand","isNonenumerable","preview"],"mappings":"2FAAA,wCAOE,SAAYA,EAAcC,EAAgBC,GAIxC,GAHAC,KAAKH,KAAOA,EACZG,KAAKF,OAASA,GAETC,EAAM,CACT,IAAME,EAAS,gCAAgCC,KAAKF,KAAKH,MAEzDE,EAAOE,EAASA,EAAO,GAAK,GAG9BD,KAAKD,KAAOA,I,kFCjBD,I,yCCAA,ICMFI,EAAY,IAAI,IAC3B,CACE,IAAI,IAAK,YDRE,igCEGR,WACL,IAAMC,EAAa,IAAI,kBAAgBC,OAAQ,kBAAmBC,UAElE,OACE,6BACE,4BACE,sCACA,4BACE,kBAAC,WAAQ,CAACT,KAAK,WAAWU,MAAOD,aAGrC,4BACE,0DACA,4BACE,kBAAC,WAAQ,CAACT,KAAK,WAAWU,MAAOD,SAAUE,eAAa,MAG5D,4BACE,4DACA,4BACE,kBAAC,WAAQ,CAACX,KAAK,WAAWU,MAAOD,SAAUG,iBAAe,MAG9D,4BACE,oDACA,4BACE,kBAAC,WAAQ,CAACZ,KAAK,WAAWU,MAAOD,SAAUI,SAAO,MAGtD,4BACE,+CACA,4BACE,kBAAC,WAAQ,CAACN,WAAYA,UDxB9B,GACA,GAGa,UFfA","file":"js/14.boundle.js","sourcesContent":["export class File {\n  name: string;\n\n  source: string;\n\n  type: string;\n  \n  constructor(name: string, source: string, type?: string) {\n    this.name = name;\n    this.source = source;\n\n    if (!type) {\n      const result = /\\.([^/\\\\.]+?)(?=(?:[?#].*)?$)/.exec(this.name);\n\n      type = result ? result[1] : '';\n    }\n\n    this.type = type;\n  }\n}","export default \"### Description\\nObject property inspector.\\n\\n### Usage\\n```jsx\\nimport { Property, NamedDescriptor } from 'mic-inspector';\\n\\nconst descriptor = new NamedDescriptor(window, 'window.location', location);\\n\\n<Property name='object' value={anyObject} preview defaultExpand isNonenumerable={false} />\\n<Property descriptor={descriptor} />\\n```\\n\\n### Demo\\n```demo\\nimport(usageDemo);\\n```\\n\\n### Props\\n* **name** · *optional* - Property name.\\n* **value** · *optional* - Property value.\\n* **descriptor** · *optional* - Property descriptor.\\n* **defaultExpand** · *optional* - A boolean represents whether this property should be expand by default\\n* **isNonenumerable** · *optional* - A boolean represents whether the object property is non-enumerable.\\n* **preview** · *optional* - A boolean represents whether enable the preview mode. In preview mode, the property can not expand and show sub properties of an object.\\n* **...props** · *extends* - HTMLProps&lt;HTMLSpanElement&gt;\";","export default \"import React from 'react';\\nimport { Property, NamedDescriptor } from 'mic-inspector';\\n\\nexport function UsageDemo() {\\n  const descriptor = new NamedDescriptor(window, 'window.location', location);\\n\\n  return (\\n    <div>\\n      <dl>\\n        <dt>normal</dt>\\n        <dd>\\n          <Property name='location' value={location} />\\n        </dd>\\n      </dl>\\n      <dl>\\n        <dt>props.defaultExpand = true</dt>\\n        <dd>\\n          <Property name='location' value={location} defaultExpand />\\n        </dd>\\n      </dl>\\n      <dl>\\n        <dt>props.isNonenumerable = true</dt>\\n        <dd>\\n          <Property name='location' value={location} isNonenumerable />\\n        </dd>\\n      </dl>\\n      <dl>\\n        <dt>props.preview = true</dt>\\n        <dd>\\n          <Property name='location' value={location} preview />\\n        </dd>\\n      </dl>\\n      <dl>\\n        <dt>descriptor mode</dt>\\n        <dd>\\n          <Property descriptor={descriptor} />\\n        </dd>\\n      </dl>\\n    </div>\\n  );\\n}\";","import markdown from './readme.md';\nimport { Demo } from '@/src/components/code-previewer/demo';\nimport { File } from '@/src/components/code-previewer/file';\nimport { UsageDemo } from './usage-demo';\nimport usageDemoSource from './usage-demo?txt';\n\nexport const usageDemo = new Demo(\n  [\n    new File('index.jsx', usageDemoSource),\n  ],\n  UsageDemo,\n  false,\n  true\n);\n\nexport default markdown;","import React from 'react';\nimport { Property, NamedDescriptor } from 'mic-inspector';\n\nexport function UsageDemo() {\n  const descriptor = new NamedDescriptor(window, 'window.location', location);\n\n  return (\n    <div>\n      <dl>\n        <dt>normal</dt>\n        <dd>\n          <Property name='location' value={location} />\n        </dd>\n      </dl>\n      <dl>\n        <dt>props.defaultExpand = true</dt>\n        <dd>\n          <Property name='location' value={location} defaultExpand />\n        </dd>\n      </dl>\n      <dl>\n        <dt>props.isNonenumerable = true</dt>\n        <dd>\n          <Property name='location' value={location} isNonenumerable />\n        </dd>\n      </dl>\n      <dl>\n        <dt>props.preview = true</dt>\n        <dd>\n          <Property name='location' value={location} preview />\n        </dd>\n      </dl>\n      <dl>\n        <dt>descriptor mode</dt>\n        <dd>\n          <Property descriptor={descriptor} />\n        </dd>\n      </dl>\n    </div>\n  );\n}"],"sourceRoot":""}