(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{130:function(e,n,t){"use strict";t.d(n,"a",(function(){return o}));var o=function(e,n,t){if(this.name=e,this.source=n,!t){var o=/\.([^/\\.]+?)(?=(?:[?#].*)?$)/.exec(this.name);t=o?o[1]:""}this.type=t}},131:function(e,n,t){"use strict";t.d(n,"a",(function(){return o}));var o=function(e,n,t,o){void 0===n&&(n=null),void 0===t&&(t=!1),void 0===o&&(o=!1),this.files=e,this.component=n,this.autoUpdate=t,this.cleanStyle=o}},198:function(e,n,t){"use strict";t.r(n),t.d(n,"usageDemo",(function(){return u}));var o=t(131),r=t(130),i=t(0),a=t.n(i),s=t(132);var u=new o.a([new r.a("index.jsx","import React from 'react';\nimport { PropertyValue } from 'mic-inspector';\n\nexport function UsageDemo() {\n  return (\n    <div>\n      <PropertyValue>This is a super component of other type values</PropertyValue>\n    </div>\n  );\n}")],(function(){return a.a.createElement("div",null,a.a.createElement(s.PropertyValue,null,"This is a super component of other type values"))}),!1,!0);n.default="### Description\nObject property value inspector.\n\n### Usage\n```jsx\nimport { PropertyValue } from 'mic-inspector';\n\n<PropertyValue>This is a super component of other type values</PropertyValue>;\n```\n\n### Demo\n```demo\nimport(usageDemo);\n```\n\n### Props\n* **value** · *required* - Any type data that you want to inspect.\n* **...props** · *extends* - HTMLProps&lt;HTMLSpanElement&gt;"}}]);