{"version":3,"sources":["webpack:///./src/components/code-previewer/syntax-highlighter/locale.ts","webpack:///./src/components/code-previewer/syntax-highlighter/index.tsx"],"names":["languageInited","SyntaxHighlighter","props","registerLanguage","bash","tsx","style"],"mappings":"4MAIWA,GAAiB,E,+MCErB,SAASC,EAAkBC,GAGhC,ODFIF,IAIJ,IAAuBG,iBAAiB,OAAQC,EAAA,GAChD,IAAuBD,iBAAiB,MAAOE,EAAA,GAC/C,IAAuBF,iBAAiB,MAAOE,EAAA,GAC/C,IAAuBF,iBAAiB,KAAME,EAAA,GAC9C,IAAuBF,iBAAiB,KAAME,EAAA,GAE9CL,GAAiB,GCRV,kBAAC,IAAsB,GAACM,MAAO,KAAqCJ,IAG9D","file":"js/22.boundle.js","sourcesContent":["import { PrismLight as ReactSyntaxHighlighter } from 'react-syntax-highlighter';\nimport tsx from 'react-syntax-highlighter/dist/esm/languages/prism/tsx';\nimport bash from 'react-syntax-highlighter/dist/esm/languages/prism/bash';\n\nexport let languageInited = false;\n\nexport const useInitLanguage = (): void => {\n  if (languageInited) {\n    return;\n  }\n\n  ReactSyntaxHighlighter.registerLanguage('bash', bash);\n  ReactSyntaxHighlighter.registerLanguage('jsx', tsx);\n  ReactSyntaxHighlighter.registerLanguage('tsx', tsx);\n  ReactSyntaxHighlighter.registerLanguage('ts', tsx);\n  ReactSyntaxHighlighter.registerLanguage('js', tsx);\n\n  languageInited = true;\n};","import React from 'react';\nimport { PrismLight as ReactSyntaxHighlighter } from 'react-syntax-highlighter';\nimport { SyntaxHighlighterStyle } from './types';\nimport { prism as style } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport { useInitLanguage } from './locale';\n\nexport function SyntaxHighlighter(props: ReactSyntaxHighlighter['props']): React.ReactElement {\n  useInitLanguage();\n\n  return <ReactSyntaxHighlighter style={style as SyntaxHighlighterStyle} {...props} />;\n}\n\nexport default SyntaxHighlighter;"],"sourceRoot":""}