(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{208:function(e,n,a){"use strict";a.d(n,"a",(function(){return d}));var d=function(e,n,a){if(this.name=e,this.source=n,!a){var d=/\.([^/\\.]+?)(?=(?:[?#].*)?$)/.exec(this.name);a=d?d[1]:""}this.type=a}},362:function(e,n,a){"use strict";a.r(n),a.d(n,"usageDemo",(function(){return i})),a.d(n,"radixProps",(function(){return m}));var d=a(98),l=a(208),r=a(0),t=a.n(r),u=a(99);var i=new d.a([new l.a("index.jsx","import React from 'react';\nimport { NumberValue, Radix } from 'mic-inspector';\n\nexport function UsageDemo() {\n  const number = 15;\n\n  return (\n    <div>\n      <dl>\n        <dt>normal</dt>\n        <dd>\n          <NumberValue value={number} />\n        </dd>\n      </dl>\n      <dl>\n        <dt>radix = Radix.Binary</dt>\n        <dd>\n          <NumberValue value={number} radix={Radix.Binary} />\n        </dd>\n      </dl>\n      <dl>\n        <dt>radix = Radix.Octal</dt>\n        <dd>\n          <NumberValue value={number} radix={Radix.Octal} />\n        </dd>\n      </dl>\n      <dl>\n        <dt>radix = Radix.Decimal</dt>\n        <dd>\n          <NumberValue value={number} radix={Radix.Decimal} />\n        </dd>\n      </dl>\n      <dl>\n        <dt>radix = Radix.Hex</dt>\n        <dd>\n          <NumberValue value={number} radix={Radix.Hex} />\n        </dd>\n      </dl>\n      <dl>\n        <dt>You can press the alt/cmd key and click the number to change the number radix.</dt>\n        <dd>\n          <NumberValue value={number} />\n        </dd>\n      </dl>\n    </div>\n  );\n}")],(function(){return t.a.createElement("div",null,t.a.createElement("dl",null,t.a.createElement("dt",null,"normal"),t.a.createElement("dd",null,t.a.createElement(u.NumberValue,{value:15}))),t.a.createElement("dl",null,t.a.createElement("dt",null,"radix = Radix.Binary"),t.a.createElement("dd",null,t.a.createElement(u.NumberValue,{value:15,radix:u.Radix.Binary}))),t.a.createElement("dl",null,t.a.createElement("dt",null,"radix = Radix.Octal"),t.a.createElement("dd",null,t.a.createElement(u.NumberValue,{value:15,radix:u.Radix.Octal}))),t.a.createElement("dl",null,t.a.createElement("dt",null,"radix = Radix.Decimal"),t.a.createElement("dd",null,t.a.createElement(u.NumberValue,{value:15,radix:u.Radix.Decimal}))),t.a.createElement("dl",null,t.a.createElement("dt",null,"radix = Radix.Hex"),t.a.createElement("dd",null,t.a.createElement(u.NumberValue,{value:15,radix:u.Radix.Hex}))),t.a.createElement("dl",null,t.a.createElement("dt",null,"You can press the alt/cmd key and click the number to change the number radix."),t.a.createElement("dd",null,t.a.createElement(u.NumberValue,{value:15}))))}),!1,!0),m={name:"Radix",value:u.Radix,defaultExpand:!0};n.default="### Description\nObject number value inspector.\n\n### Usage\n```jsx\nimport { NumberValue, Radix } from 'mic-inspector';\n\n<NumberValue value={15} />;\n<NumberValue value={15} radix={Radix.Hex} />;\n```\n\n### Demo\n```demo\nimport(usageDemo);\n```\n\n### Props\n* **value** · *required* - The number value.\n* **radix** · *optional* - A specific number radix, default is Radix.Decimal.\n* **...props** · *extends* - PropertyValueProps\n\n### Radix\n* Import from `mic-inspector`\n```js\nimport { Radix } from 'mic-inspector';\n```\n\n* Inspect this object.\n```inspector\ninspect(radixProps);\n```"}}]);
//# sourceMappingURL=9.boundle.js.map