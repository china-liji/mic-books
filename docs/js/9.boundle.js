(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{130:function(e,n,a){"use strict";a.d(n,"a",(function(){return t}));var t=function(e,n,a){if(this.name=e,this.source=n,!a){var t=/\.([^/\\.]+?)(?=(?:[?#].*)?$)/.exec(this.name);a=t?t[1]:""}this.type=a}},131:function(e,n,a){"use strict";a.d(n,"a",(function(){return t}));var t=function(e,n,a,t){void 0===n&&(n=null),void 0===a&&(a=!1),void 0===t&&(t=!1),this.files=e,this.component=n,this.autoUpdate=a,this.cleanStyle=t}},200:function(e,n,a){"use strict";a.r(n),a.d(n,"usageDemo",(function(){return i})),a.d(n,"radixProps",(function(){return m}));var t=a(131),d=a(130),l=a(0),r=a.n(l),u=a(132);var i=new t.a([new d.a("index.jsx","import React from 'react';\nimport { NumberValue, Radix } from 'mic-inspector';\n\nexport function UsageDemo() {\n  const number = 15;\n\n  return (\n    <div>\n      <dl>\n        <dt>normal</dt>\n        <dd>\n          <NumberValue value={number} />\n        </dd>\n      </dl>\n      <dl>\n        <dt>radix = Radix.Binary</dt>\n        <dd>\n          <NumberValue value={number} radix={Radix.Binary} />\n        </dd>\n      </dl>\n      <dl>\n        <dt>radix = Radix.Octal</dt>\n        <dd>\n          <NumberValue value={number} radix={Radix.Octal} />\n        </dd>\n      </dl>\n      <dl>\n        <dt>radix = Radix.Decimal</dt>\n        <dd>\n          <NumberValue value={number} radix={Radix.Decimal} />\n        </dd>\n      </dl>\n      <dl>\n        <dt>radix = Radix.Hex</dt>\n        <dd>\n          <NumberValue value={number} radix={Radix.Hex} />\n        </dd>\n      </dl>\n      <dl>\n        <dt>You can press the alt/cmd key and click the number to change the number radix.</dt>\n        <dd>\n          <NumberValue value={number} />\n        </dd>\n      </dl>\n    </div>\n  );\n}")],(function(){return r.a.createElement("div",null,r.a.createElement("dl",null,r.a.createElement("dt",null,"normal"),r.a.createElement("dd",null,r.a.createElement(u.NumberValue,{value:15}))),r.a.createElement("dl",null,r.a.createElement("dt",null,"radix = Radix.Binary"),r.a.createElement("dd",null,r.a.createElement(u.NumberValue,{value:15,radix:u.Radix.Binary}))),r.a.createElement("dl",null,r.a.createElement("dt",null,"radix = Radix.Octal"),r.a.createElement("dd",null,r.a.createElement(u.NumberValue,{value:15,radix:u.Radix.Octal}))),r.a.createElement("dl",null,r.a.createElement("dt",null,"radix = Radix.Decimal"),r.a.createElement("dd",null,r.a.createElement(u.NumberValue,{value:15,radix:u.Radix.Decimal}))),r.a.createElement("dl",null,r.a.createElement("dt",null,"radix = Radix.Hex"),r.a.createElement("dd",null,r.a.createElement(u.NumberValue,{value:15,radix:u.Radix.Hex}))),r.a.createElement("dl",null,r.a.createElement("dt",null,"You can press the alt/cmd key and click the number to change the number radix."),r.a.createElement("dd",null,r.a.createElement(u.NumberValue,{value:15}))))}),!1,!0),m={name:"Radix",value:u.Radix,defaultExpand:!0};n.default="### Description\nObject number value inspector.\n\n### Usage\n```jsx\nimport { NumberValue, Radix } from 'mic-inspector';\n\n<NumberValue value={15} />;\n<NumberValue value={15} radix={Radix.Hex} />;\n```\n\n### Demo\n```demo\nimport(usageDemo);\n```\n\n### Props\n* **value** · *required* - The number value.\n* **radix** · *optional* - A specific number radix, default is Radix.Decimal.\n* **...props** · *extends* - PropertyValueProps\n\n### Radix\n* Import from `mic-inspector`\n```js\nimport { Radix } from 'mic-inspector';\n```\n\n* Inspect this object.\n```inspector\ninspect(radixProps);\n```"}}]);