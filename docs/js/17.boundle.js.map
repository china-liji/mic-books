{"version":3,"sources":["webpack:///./src/components/code-previewer/file.ts","webpack:///./demos/mic/mic-inspector/unknown-value/readme.md","webpack:///./demos/mic/mic-inspector/unknown-value/usage-demo/index.jsx?c782","webpack:///./demos/mic/mic-inspector/unknown-value/index.ts","webpack:///./demos/mic/mic-inspector/unknown-value/usage-demo/index.jsx"],"names":["name","source","type","this","result","exec","usageDemo","value","location","undefined","reload"],"mappings":"2FAAA,wCAOE,SAAYA,EAAcC,EAAgBC,GAIxC,GAHAC,KAAKH,KAAOA,EACZG,KAAKF,OAASA,GAETC,EAAM,CACT,IAAME,EAAS,gCAAgCC,KAAKF,KAAKH,MAEzDE,EAAOE,EAASA,EAAO,GAAK,GAG9BD,KAAKD,KAAOA,I,kFCjBD,I,yCCAA,ICMFI,EAAY,IAAI,IAC3B,CACE,IAAI,IAAK,YDRE,sgBEGR,WACL,OACE,6BACE,kBAAC,eAAY,CAACC,MAAOC,WACrB,6BACA,kBAAC,eAAY,CAACD,MAAM,QACpB,6BACA,kBAAC,eAAY,CAACA,MAAO,MACrB,6BACA,kBAAC,eAAY,CAACA,WAAOE,IACrB,6BACA,kBAAC,eAAY,CAACF,OAAO,IACrB,6BACA,kBAAC,eAAY,CAACA,OAAO,IACrB,6BACA,kBAAC,eAAY,CAACA,MAAOC,SAASE,aDPlC,GACA,GAGa,UFfA","file":"js/17.boundle.js","sourcesContent":["export class File {\n  name: string;\n\n  source: string;\n\n  type: string;\n  \n  constructor(name: string, source: string, type?: string) {\n    this.name = name;\n    this.source = source;\n\n    if (!type) {\n      const result = /\\.([^/\\\\.]+?)(?=(?:[?#].*)?$)/.exec(this.name);\n\n      type = result ? result[1] : '';\n    }\n\n    this.type = type;\n  }\n}","export default \"### Description\\nObject unknown value inspector. This component will render another specific component by value type.\\n\\n### Usage\\n```jsx\\nimport { UnknownValue } from 'mic-inspector';\\n\\n<UnknownValue value={anyValue} />\\n```\\n\\n### Demo\\n```demo\\nimport(usageDemo);\\n```\\n\\n### Props\\n* **value** · *required* - Any type data that you want to inspect.\\n* **...props** · *extends* - PropertyValueProps\";","export default \"import React from 'react';\\nimport { UnknownValue } from 'mic-inspector';\\n\\nexport function UsageDemo() {\\n  return (\\n    <div>\\n      <UnknownValue value={location} />\\n      <br />\\n      <UnknownValue value='abc' />\\n      <br />\\n      <UnknownValue value={123} />\\n      <br />\\n      <UnknownValue value={undefined} />\\n      <br />\\n      <UnknownValue value={true} />\\n      <br />\\n      <UnknownValue value={false} />\\n      <br />\\n      <UnknownValue value={location.reload} />\\n    </div>\\n  );\\n}\";","import markdown from './readme.md';\nimport { Demo } from '@/src/components/code-previewer/demo';\nimport { File } from '@/src/components/code-previewer/file';\nimport { UsageDemo } from './usage-demo';\nimport usageDemoSource from './usage-demo?txt';\n\nexport const usageDemo = new Demo(\n  [\n    new File('index.jsx', usageDemoSource),\n  ],\n  UsageDemo,\n  false,\n  true\n);\n\nexport default markdown;","import React from 'react';\nimport { UnknownValue } from 'mic-inspector';\n\nexport function UsageDemo() {\n  return (\n    <div>\n      <UnknownValue value={location} />\n      <br />\n      <UnknownValue value='abc' />\n      <br />\n      <UnknownValue value={123} />\n      <br />\n      <UnknownValue value={undefined} />\n      <br />\n      <UnknownValue value={true} />\n      <br />\n      <UnknownValue value={false} />\n      <br />\n      <UnknownValue value={location.reload} />\n    </div>\n  );\n}"],"sourceRoot":""}