(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{173:function(e,n,t){"use strict";t.d(n,"a",(function(){return r}));var r=function(e,n,t){if(this.name=e,this.source=n,!t){var r=/\.([^/\\.]+?)(?=(?:[?#].*)?$)/.exec(this.name);t=r?r[1]:""}this.type=t}},410:function(e,n,t){"use strict";t.r(n),t.d(n,"usageDemo",(function(){return a}));var r=t(74),o=t(173),i=t(0),p=t.n(i),s=t(172);var a=new r.a([new o.a("index.jsx","import React from 'react';\nimport { Properties } from 'mic-inspector';\n\nexport function UsageDemo() {\n  return (\n    <div>\n      <Properties owner={document} />\n    </div>\n  );\n}")],(function(){return p.a.createElement("div",null,p.a.createElement(s.Properties,{owner:document}))}),!1,!0);n.default="### Description\nObject properties inspector.\n\n### Usage\n```jsx\nimport { Properties } from 'mic-inspector';\n\n<Properties owner={anyObject} />\n```\n\n### Demo\n```demo\nimport(usageDemo);\n```\n\n### Props\n* **owner** · *required* - An object that provides the properties to inspect.\n* **preview** · *optional* - A boolean represents whether enable the preview mode. In preview mode, the property can not expand and show sub properties of an object.\n* **...props** · *extends* - HTMLProps&lt;HTMLSpanElement&gt;"}}]);