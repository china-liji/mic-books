{"version":3,"sources":["webpack:///./src/components/code-previewer/file.ts","webpack:///./demos/mic/mic-inspector/object-value/readme.md","webpack:///./demos/mic/mic-inspector/object-value/usage-demo/index.jsx?64ba","webpack:///./demos/mic/mic-inspector/object-value/index.ts","webpack:///./demos/mic/mic-inspector/object-value/usage-demo/index.jsx"],"names":["name","source","type","this","result","exec","usageDemo","obj","a","b","c","d","arr","document","body","value","preview","maxPropertyLength"],"mappings":"2FAAA,wCAOE,SAAYA,EAAcC,EAAgBC,GAIxC,GAHAC,KAAKH,KAAOA,EACZG,KAAKF,OAASA,GAETC,EAAM,CACT,IAAME,EAAS,gCAAgCC,KAAKF,KAAKH,MAEzDE,EAAOE,EAASA,EAAO,GAAK,GAG9BD,KAAKD,KAAOA,I,kFCjBD,I,yCCAA,ICMFI,EAAY,IAAI,IAC3B,CACE,IAAI,IAAK,YDRE,whDEGR,WACL,IAAMC,EAAM,CACVC,EAAG,EACHC,EAAG,MACHC,GAAG,EACHC,EAAC,aACD,WACE,OAAOJ,GAET,UACE,OAAOK,IAILA,EAAM,CAACL,EAAK,EAAG,IAAKM,SAASC,MAEnC,OACE,6BACE,4BACE,+CACA,4BACE,kBAAC,cAAW,CAACC,MAAOR,MAGxB,4BACE,8CACA,4BACE,kBAAC,cAAW,CAACQ,MAAOH,M,aAIxB,4BACE,8CACA,4BACE,kBAAC,cAAW,CAACG,MAAO,OAGxB,4BACE,6CACA,4BACE,kBAAC,cAAW,CAACA,MAAO,O,aAIxB,4BACE,6DACA,4BACE,kBAAC,cAAW,CAACA,MAAOR,EAAKS,SAAO,MAGpC,4BACE,4DACA,4BACE,kBAAC,cAAW,CAACD,MAAOH,EAAKI,SAAO,M,aAIpC,4BACE,oEACA,4BACE,kBAAC,cAAW,CAACD,MAAOR,EAAKU,kBAAmB,MAGhD,4BACE,mEACA,4BACE,kBAAC,cAAW,CAACF,MAAOH,EAAKK,kBAAmB,UD1DpD,GACA,GAGa,UFfA","file":"js/10.boundle.js","sourcesContent":["export class File {\n  name: string;\n\n  source: string;\n\n  type: string;\n  \n  constructor(name: string, source: string, type?: string) {\n    this.name = name;\n    this.source = source;\n\n    if (!type) {\n      const result = /\\.([^/\\\\.]+?)(?=(?:[?#].*)?$)/.exec(this.name);\n\n      type = result ? result[1] : '';\n    }\n\n    this.type = type;\n  }\n}","export default \"### Description\\nObject value inspector.\\n\\n### Usage\\n```jsx\\nimport { ObjectValue } from 'mic-inspector';\\n\\n<ObjectValue value={anyObject} />;\\n<ObjectValue value={anyObject} preview maxPropertyLength={5} />;\\n```\\n\\n### Demo\\n```demo\\nimport(usageDemo);\\n```\\n\\n### Props\\n* **value** 路 *required* - Any object that you want to inspect.\\n* **preview** 路 *optional* - A boolean represents whether enable the preview mode. In preview mode, the property will not show sub properties.\\n* **maxPropertyLength** 路 *optional* - A number represents the length of object properties to preview.\\n* **...props** 路 *extends* - PropertyValueProps\";","export default \"import React from 'react';\\nimport { ObjectValue } from 'mic-inspector';\\n\\nexport function UsageDemo() {\\n  const obj = {\\n    a: 1,\\n    b: 'abc',\\n    c: true,\\n    d() {},\\n    get self() {\\n      return obj;\\n    },\\n    get arr() {\\n      return arr;\\n    }\\n  };\\n\\n  const arr = [obj, 1, 'a', document.body];\\n\\n  return (\\n    <div>\\n      <dl>\\n        <dt>object # normal</dt>\\n        <dd>\\n          <ObjectValue value={obj} />\\n        </dd>\\n      </dl>\\n      <dl>\\n        <dt>array # normal</dt>\\n        <dd>\\n          <ObjectValue value={arr} />\\n        </dd>\\n      </dl>\\n      ----------\\n      <dl>\\n        <dt>object # empty</dt>\\n        <dd>\\n          <ObjectValue value={{}} />\\n        </dd>\\n      </dl>\\n      <dl>\\n        <dt>array # empty</dt>\\n        <dd>\\n          <ObjectValue value={[]} />\\n        </dd>\\n      </dl>\\n      ----------\\n      <dl>\\n        <dt>object # props.preview = true</dt>\\n        <dd>\\n          <ObjectValue value={obj} preview />\\n        </dd>\\n      </dl>\\n      <dl>\\n        <dt>array # props.preview = true</dt>\\n        <dd>\\n          <ObjectValue value={arr} preview />\\n        </dd>\\n      </dl>\\n      ----------\\n      <dl>\\n        <dt>object # props.maxPropertyLength = 2</dt>\\n        <dd>\\n          <ObjectValue value={obj} maxPropertyLength={2} />\\n        </dd>\\n      </dl>\\n      <dl>\\n        <dt>array # props.maxPropertyLength = 2</dt>\\n        <dd>\\n          <ObjectValue value={arr} maxPropertyLength={2} />\\n        </dd>\\n      </dl>\\n    </div>\\n  );\\n}\";","import markdown from './readme.md';\nimport { Demo } from '@/src/components/code-previewer/demo';\nimport { File } from '@/src/components/code-previewer/file';\nimport { UsageDemo } from './usage-demo';\nimport usageDemoSource from './usage-demo?txt';\n\nexport const usageDemo = new Demo(\n  [\n    new File('index.jsx', usageDemoSource),\n  ],\n  UsageDemo,\n  false,\n  true\n);\n\nexport default markdown;","import React from 'react';\nimport { ObjectValue } from 'mic-inspector';\n\nexport function UsageDemo() {\n  const obj = {\n    a: 1,\n    b: 'abc',\n    c: true,\n    d() {},\n    get self() {\n      return obj;\n    },\n    get arr() {\n      return arr;\n    }\n  };\n\n  const arr = [obj, 1, 'a', document.body];\n\n  return (\n    <div>\n      <dl>\n        <dt>object # normal</dt>\n        <dd>\n          <ObjectValue value={obj} />\n        </dd>\n      </dl>\n      <dl>\n        <dt>array # normal</dt>\n        <dd>\n          <ObjectValue value={arr} />\n        </dd>\n      </dl>\n      ----------\n      <dl>\n        <dt>object # empty</dt>\n        <dd>\n          <ObjectValue value={{}} />\n        </dd>\n      </dl>\n      <dl>\n        <dt>array # empty</dt>\n        <dd>\n          <ObjectValue value={[]} />\n        </dd>\n      </dl>\n      ----------\n      <dl>\n        <dt>object # props.preview = true</dt>\n        <dd>\n          <ObjectValue value={obj} preview />\n        </dd>\n      </dl>\n      <dl>\n        <dt>array # props.preview = true</dt>\n        <dd>\n          <ObjectValue value={arr} preview />\n        </dd>\n      </dl>\n      ----------\n      <dl>\n        <dt>object # props.maxPropertyLength = 2</dt>\n        <dd>\n          <ObjectValue value={obj} maxPropertyLength={2} />\n        </dd>\n      </dl>\n      <dl>\n        <dt>array # props.maxPropertyLength = 2</dt>\n        <dd>\n          <ObjectValue value={arr} maxPropertyLength={2} />\n        </dd>\n      </dl>\n    </div>\n  );\n}"],"sourceRoot":""}