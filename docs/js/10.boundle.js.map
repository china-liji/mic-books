{"version":3,"sources":["webpack:///./src/components/code-previewer/file.ts","webpack:///./demos/mic/mic-inspector/property-name/readme.md","webpack:///./demos/mic/mic-inspector/property-name/usage-demo/index.jsx?3587","webpack:///./demos/mic/mic-inspector/property-name/index.ts","webpack:///./demos/mic/mic-inspector/property-name/usage-demo/index.jsx"],"names":["name","source","type","this","result","exec","usageDemo","Symbol","dimmed","Index"],"mappings":"2FAAA,wCAOE,SAAYA,EAAcC,EAAgBC,GAIxC,GAHAC,KAAKH,KAAOA,EACZG,KAAKF,OAASA,GAETC,EAAM,CACT,IAAME,EAAS,gCAAgCC,KAAKF,KAAKH,MAEzDE,EAAOE,EAASA,EAAO,GAAK,GAG9BD,KAAKD,KAAOA,I,kFCjBD,I,2CCAA,ICMFI,EAAY,IAAI,IAC3B,CACE,IAAI,IAAK,YDRE,6mBEGR,WACL,OACE,6BACE,4BACE,sCACA,4BACE,kBAAC,eAAY,CAACN,KAAK,UAGvB,4BACE,mDACA,4BACE,kBAAC,eAAY,CAACA,KAAMO,OAAO,OAAQC,QAAM,MAG7C,4BACE,qEACA,4BACE,kBAAC,eAAY,CAACR,KAAM,EAAGE,KAAM,qBAAmBO,cDVxD,GACA,GAGa,UFfA","file":"js/10.boundle.js","sourcesContent":["export class File {\n  name: string;\n\n  source: string;\n\n  type: string;\n  \n  constructor(name: string, source: string, type?: string) {\n    this.name = name;\n    this.source = source;\n\n    if (!type) {\n      const result = /\\.([^/\\\\.]+?)(?=(?:[?#].*)?$)/.exec(this.name);\n\n      type = result ? result[1] : '';\n    }\n\n    this.type = type;\n  }\n}","export default \"### Description\\nObject property name inspector.\\n\\n### Usage\\n```jsx\\nimport { PropertyName } from 'mic-inspector';\\n\\n<PropertyName name='abc' />;\\n<PropertyName name={Symbol('abc')} dimmed />;\\n<PropertyName name={0} type={DescriptorNameType.Index} />;\\n```\\n\\n### Demo\\n```demo\\nimport(usageDemo);\\n```\\n\\n### Props\\n* **name** 路 *required* - Property name.\\n* **dimmed** 路 *optional* - A boolean represents whether the font color should be dimmed.\\n* **type** 路 *optional* - Property name type, only for query this component in css.\\n* **...props** 路 *extends* - HTMLProps&lt;HTMLSpanElement&gt;\";","export default \"import React from 'react';\\nimport { PropertyName, DescriptorNameType } from 'mic-inspector';\\n\\nexport function UsageDemo() {\\n  return (\\n    <div>\\n      <dl>\\n        <dt>normal</dt>\\n        <dd>\\n          <PropertyName name='abc' />\\n        </dd>\\n      </dl>\\n      <dl>\\n        <dt>props.dimmed = true</dt>\\n        <dd>\\n          <PropertyName name={Symbol('abc')} dimmed />\\n        </dd>\\n      </dl>\\n      <dl>\\n        <dt>props.type = DescriptorNameType.Index</dt>\\n        <dd>\\n          <PropertyName name={0} type={DescriptorNameType.Index} />\\n        </dd>\\n      </dl>\\n    </div>\\n  );\\n}\";","import markdown from './readme.md';\nimport { Demo } from '@/src/components/code-previewer/demo';\nimport { File } from '@/src/components/code-previewer/file';\nimport { UsageDemo } from './usage-demo';\nimport usageDemoSource from './usage-demo?txt';\n\nexport const usageDemo = new Demo(\n  [\n    new File('index.jsx', usageDemoSource),\n  ],\n  UsageDemo,\n  false,\n  true\n);\n\nexport default markdown;","import React from 'react';\nimport { PropertyName, DescriptorNameType } from 'mic-inspector';\n\nexport function UsageDemo() {\n  return (\n    <div>\n      <dl>\n        <dt>normal</dt>\n        <dd>\n          <PropertyName name='abc' />\n        </dd>\n      </dl>\n      <dl>\n        <dt>props.dimmed = true</dt>\n        <dd>\n          <PropertyName name={Symbol('abc')} dimmed />\n        </dd>\n      </dl>\n      <dl>\n        <dt>props.type = DescriptorNameType.Index</dt>\n        <dd>\n          <PropertyName name={0} type={DescriptorNameType.Index} />\n        </dd>\n      </dl>\n    </div>\n  );\n}"],"sourceRoot":""}